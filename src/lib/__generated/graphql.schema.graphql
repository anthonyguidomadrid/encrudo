"""Represents a binary file in a space. An asset can be any file type."""
type Asset {
  contentType(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  fileName(locale: String): String
  height(locale: String): Int
  linkedFrom(allowedLocales: [String]): AssetLinkingCollections
  size(locale: String): Int
  sys: Sys!
  title(locale: String): String
  url(locale: String, transform: ImageTransformOptions): String
  width(locale: String): Int
}

type AssetCollection {
  items: [Asset]!
  limit: Int!
  skip: Int!
  total: Int!
}

input AssetFilter {
  AND: [AssetFilter]
  OR: [AssetFilter]
  contentType: String
  contentType_contains: String
  contentType_exists: Boolean
  contentType_in: [String]
  contentType_not: String
  contentType_not_contains: String
  contentType_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  fileName: String
  fileName_contains: String
  fileName_exists: Boolean
  fileName_in: [String]
  fileName_not: String
  fileName_not_contains: String
  fileName_not_in: [String]
  height: Int
  height_exists: Boolean
  height_gt: Int
  height_gte: Int
  height_in: [Int]
  height_lt: Int
  height_lte: Int
  height_not: Int
  height_not_in: [Int]
  size: Int
  size_exists: Boolean
  size_gt: Int
  size_gte: Int
  size_in: [Int]
  size_lt: Int
  size_lte: Int
  size_not: Int
  size_not_in: [Int]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
  width: Int
  width_exists: Boolean
  width_gt: Int
  width_gte: Int
  width_in: [Int]
  width_lt: Int
  width_lte: Int
  width_not: Int
  width_not_in: [Int]
}

type AssetLinkingCollections {
  assetsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): AssetsCollection
  componentSeoCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentSeoCollection
  componentSliderCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): ComponentSliderCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageAboutCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageAboutCollection
  pageLandingCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageLandingCollection
  pageProductCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageProductCollection
  pageProjectCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageProjectCollection
}

enum AssetOrder {
  contentType_ASC
  contentType_DESC
  fileName_ASC
  fileName_DESC
  height_ASC
  height_DESC
  size_ASC
  size_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  url_ASC
  url_DESC
  width_ASC
  width_DESC
}

"""
Logo and social media links [See type definition](https://app.contentful.com/spaces/7hpjtmfrm15k/content_types/assets)
"""
type Assets implements Entry {
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): AssetsLinkingCollections
  logoDark(locale: String, preview: Boolean): Asset
  logoLight(locale: String, preview: Boolean): Asset
  logoSmall(locale: String, preview: Boolean): Asset
  sys: Sys!
}

type AssetsCollection {
  items: [Assets]!
  limit: Int!
  skip: Int!
  total: Int!
}

input AssetsFilter {
  AND: [AssetsFilter]
  OR: [AssetsFilter]
  contentfulMetadata: ContentfulMetadataFilter
  logoDark_exists: Boolean
  logoLight_exists: Boolean
  logoSmall_exists: Boolean
  sys: SysFilter
}

type AssetsLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum AssetsOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
Contact Information in Footer and Contact Page [See type definition](https://app.contentful.com/spaces/7hpjtmfrm15k/content_types/componentContact)
"""
type ComponentContact implements Entry {
  contentfulMetadata: ContentfulMetadata!
  email(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentContactLinkingCollections
  location(locale: String): String
  phone(locale: String): String
  sys: Sys!
}

type ComponentContactCollection {
  items: [ComponentContact]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentContactFilter {
  AND: [ComponentContactFilter]
  OR: [ComponentContactFilter]
  contentfulMetadata: ContentfulMetadataFilter
  email: String
  email_contains: String
  email_exists: Boolean
  email_in: [String]
  email_not: String
  email_not_contains: String
  email_not_in: [String]
  location: String
  location_contains: String
  location_exists: Boolean
  location_in: [String]
  location_not: String
  location_not_contains: String
  location_not_in: [String]
  phone: String
  phone_contains: String
  phone_exists: Boolean
  phone_in: [String]
  phone_not: String
  phone_not_contains: String
  phone_not_in: [String]
  sys: SysFilter
}

type ComponentContactLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageContactCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageContactCollection
}

enum ComponentContactOrder {
  email_ASC
  email_DESC
  location_ASC
  location_DESC
  phone_ASC
  phone_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
To have SEO-related properties in the pages we render [See type definition](https://app.contentful.com/spaces/7hpjtmfrm15k/content_types/componentSeo)
"""
type ComponentSeo implements Entry {
  canonicalUrl(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentSeoLinkingCollections
  nofollow(locale: String): Boolean
  noindex(locale: String): Boolean
  pageDescription(locale: String): String
  pageTitle(locale: String): String
  shareImagesCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): AssetCollection
  sys: Sys!
}

type ComponentSeoCollection {
  items: [ComponentSeo]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentSeoFilter {
  AND: [ComponentSeoFilter]
  OR: [ComponentSeoFilter]
  canonicalUrl: String
  canonicalUrl_contains: String
  canonicalUrl_exists: Boolean
  canonicalUrl_in: [String]
  canonicalUrl_not: String
  canonicalUrl_not_contains: String
  canonicalUrl_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  nofollow: Boolean
  nofollow_exists: Boolean
  nofollow_not: Boolean
  noindex: Boolean
  noindex_exists: Boolean
  noindex_not: Boolean
  pageDescription: String
  pageDescription_contains: String
  pageDescription_exists: Boolean
  pageDescription_in: [String]
  pageDescription_not: String
  pageDescription_not_contains: String
  pageDescription_not_in: [String]
  pageTitle: String
  pageTitle_contains: String
  pageTitle_exists: Boolean
  pageTitle_in: [String]
  pageTitle_not: String
  pageTitle_not_contains: String
  pageTitle_not_in: [String]
  shareImagesCollection_exists: Boolean
  sys: SysFilter
}

type ComponentSeoLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageAboutCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageAboutCollection
  pageContactCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageContactCollection
  pageHomeCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageHomeCollection
  pageLandingCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageLandingCollection
  pageProductCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageProductCollection
}

enum ComponentSeoOrder {
  canonicalUrl_ASC
  canonicalUrl_DESC
  internalName_ASC
  internalName_DESC
  nofollow_ASC
  nofollow_DESC
  noindex_ASC
  noindex_DESC
  pageTitle_ASC
  pageTitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
Home page & product page sliders [See type definition](https://app.contentful.com/spaces/7hpjtmfrm15k/content_types/componentSlider)
"""
type ComponentSlider implements Entry {
  contentfulMetadata: ContentfulMetadata!
  imageCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): AssetCollection
  linkedFrom(allowedLocales: [String]): ComponentSliderLinkingCollections
  sys: Sys!
}

type ComponentSliderCollection {
  items: [ComponentSlider]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentSliderFilter {
  AND: [ComponentSliderFilter]
  OR: [ComponentSliderFilter]
  contentfulMetadata: ContentfulMetadataFilter
  imageCollection_exists: Boolean
  sys: SysFilter
}

type ComponentSliderLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageHomeCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageHomeCollection
  pageProjectCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageProjectCollection
}

enum ComponentSliderOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
Social Media Links in Footer [See type definition](https://app.contentful.com/spaces/7hpjtmfrm15k/content_types/componentSocialMedia)
"""
type ComponentSocialMedia implements Entry {
  contentfulMetadata: ContentfulMetadata!
  link(locale: String): String
  linkedFrom(allowedLocales: [String]): ComponentSocialMediaLinkingCollections
  name(locale: String): String
  sys: Sys!
}

type ComponentSocialMediaCollection {
  items: [ComponentSocialMedia]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ComponentSocialMediaFilter {
  AND: [ComponentSocialMediaFilter]
  OR: [ComponentSocialMediaFilter]
  contentfulMetadata: ContentfulMetadataFilter
  link: String
  link_contains: String
  link_exists: Boolean
  link_in: [String]
  link_not: String
  link_not_contains: String
  link_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  sys: SysFilter
}

type ComponentSocialMediaLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ComponentSocialMediaOrder {
  link_ASC
  link_DESC
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type ContentfulMetadata {
  tags: [ContentfulTag]!
}

input ContentfulMetadataFilter {
  tags: ContentfulMetadataTagsFilter
  tags_exists: Boolean
}

input ContentfulMetadataTagsFilter {
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

"""
Represents a tag entity for finding and organizing content easily.
    Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags
"""
type ContentfulTag {
  id: String
  name: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z,
    compliant with the 'date-time' format outlined in section 5.6 of
    the RFC 3339 profile of the ISO 8601 standard for representation
    of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`.
"""
scalar Dimension

interface Entry {
  contentfulMetadata: ContentfulMetadata!
  sys: Sys!
}

type EntryCollection {
  items: [Entry]!
  limit: Int!
  skip: Int!
  total: Int!
}

input EntryFilter {
  AND: [EntryFilter]
  OR: [EntryFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

enum EntryOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""The 'HexColor' type represents color in `rgb:ffffff` string format."""
scalar HexColor

enum ImageFormat {
  AVIF

  """JPG image format."""
  JPG

  """
  Progressive JPG format stores multiple passes of an image in progressively higher detail.
          When a progressive image is loading, the viewer will first see a lower quality pixelated version which
          will gradually improve in detail, until the image is fully downloaded. This is to display an image as
          early as possible to make the layout look as designed.
  """
  JPG_PROGRESSIVE

  """PNG image format"""
  PNG

  """
  8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
          The 8-bit PNG format is mostly used for simple images, such as icons or logos.
  """
  PNG8

  """WebP image format."""
  WEBP
}

enum ImageResizeFocus {
  """Focus the resizing on the bottom."""
  BOTTOM

  """Focus the resizing on the bottom left."""
  BOTTOM_LEFT

  """Focus the resizing on the bottom right."""
  BOTTOM_RIGHT

  """Focus the resizing on the center."""
  CENTER

  """Focus the resizing on the largest face."""
  FACE

  """Focus the resizing on the area containing all the faces."""
  FACES

  """Focus the resizing on the left."""
  LEFT

  """Focus the resizing on the right."""
  RIGHT

  """Focus the resizing on the top."""
  TOP

  """Focus the resizing on the top left."""
  TOP_LEFT

  """Focus the resizing on the top right."""
  TOP_RIGHT
}

enum ImageResizeStrategy {
  """
  Crops a part of the original image to fit into the specified dimensions.
  """
  CROP

  """
  Resizes the image to the specified dimensions, cropping the image if needed.
  """
  FILL

  """Resizes the image to fit into the specified dimensions."""
  FIT

  """
  Resizes the image to the specified dimensions, padding the image if needed.
          Uses desired background color as padding color.
  """
  PAD

  """
  Resizes the image to the specified dimensions, changing the original aspect ratio if needed.
  """
  SCALE

  """Creates a thumbnail from the image."""
  THUMB
}

input ImageTransformOptions {
  """
  Desired background color, used with corner radius or `PAD` resize strategy.
          Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
  """
  backgroundColor: HexColor

  """
  Desired corner radius in pixels.
          Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
          Defaults to `0`. Uses desired background color as padding color,
          unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
  """
  cornerRadius: Int

  """Desired image format. Defaults to the original image format."""
  format: ImageFormat

  """Desired height in pixels. Defaults to the original image height."""
  height: Dimension

  """
  Desired quality of the image in percents.
          Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
  """
  quality: Quality

  """Desired resize focus area. Defaults to `CENTER`."""
  resizeFocus: ImageResizeFocus

  """Desired resize strategy. Defaults to `FIT`."""
  resizeStrategy: ImageResizeStrategy

  """Desired width in pixels. Defaults to the original image width."""
  width: Dimension
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
Menu items: name, link, index and CTA [See type definition](https://app.contentful.com/spaces/7hpjtmfrm15k/content_types/menu)
"""
type Menu implements Entry {
  contentfulMetadata: ContentfulMetadata!
  indexOrder(locale: String): Int
  isCta(locale: String): Boolean
  isProject(locale: String): Boolean
  link(locale: String): String
  linkedFrom(allowedLocales: [String]): MenuLinkingCollections
  name(locale: String): String
  sys: Sys!
}

type MenuCollection {
  items: [Menu]!
  limit: Int!
  skip: Int!
  total: Int!
}

input MenuFilter {
  AND: [MenuFilter]
  OR: [MenuFilter]
  contentfulMetadata: ContentfulMetadataFilter
  indexOrder: Int
  indexOrder_exists: Boolean
  indexOrder_gt: Int
  indexOrder_gte: Int
  indexOrder_in: [Int]
  indexOrder_lt: Int
  indexOrder_lte: Int
  indexOrder_not: Int
  indexOrder_not_in: [Int]
  isCta: Boolean
  isCta_exists: Boolean
  isCta_not: Boolean
  isProject: Boolean
  isProject_exists: Boolean
  isProject_not: Boolean
  link: String
  link_contains: String
  link_exists: Boolean
  link_in: [String]
  link_not: String
  link_not_contains: String
  link_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  sys: SysFilter
}

type MenuLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum MenuOrder {
  indexOrder_ASC
  indexOrder_DESC
  isCta_ASC
  isCta_DESC
  isProject_ASC
  isProject_DESC
  link_ASC
  link_DESC
  name_ASC
  name_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
About page template [See type definition](https://app.contentful.com/spaces/7hpjtmfrm15k/content_types/pageAbout)
"""
type PageAbout implements Entry {
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): PageAboutDescription
  linkedFrom(allowedLocales: [String]): PageAboutLinkingCollections
  mainPicture(locale: String, preview: Boolean): Asset
  picturesOfReferenceCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): AssetCollection
  seo(locale: String, preview: Boolean): ComponentSeo
  sys: Sys!
  title(locale: String): String
}

type PageAboutCollection {
  items: [PageAbout]!
  limit: Int!
  skip: Int!
  total: Int!
}

type PageAboutDescription {
  json: JSON!
  links: PageAboutDescriptionLinks!
}

type PageAboutDescriptionAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type PageAboutDescriptionEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type PageAboutDescriptionLinks {
  assets: PageAboutDescriptionAssets!
  entries: PageAboutDescriptionEntries!
}

input PageAboutFilter {
  AND: [PageAboutFilter]
  OR: [PageAboutFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description_contains: String
  description_exists: Boolean
  description_not_contains: String
  mainPicture_exists: Boolean
  picturesOfReferenceCollection_exists: Boolean
  seo: cfComponentSeoNestedFilter
  seo_exists: Boolean
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type PageAboutLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum PageAboutOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
Contact page template [See type definition](https://app.contentful.com/spaces/7hpjtmfrm15k/content_types/pageContact)
"""
type PageContact implements Entry {
  contactInformation(locale: String, preview: Boolean): ComponentContact
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): PageContactDescription
  linkedFrom(allowedLocales: [String]): PageContactLinkingCollections
  seo(locale: String, preview: Boolean): ComponentSeo
  sys: Sys!
  title(locale: String): String
}

type PageContactCollection {
  items: [PageContact]!
  limit: Int!
  skip: Int!
  total: Int!
}

type PageContactDescription {
  json: JSON!
  links: PageContactDescriptionLinks!
}

type PageContactDescriptionAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type PageContactDescriptionEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type PageContactDescriptionLinks {
  assets: PageContactDescriptionAssets!
  entries: PageContactDescriptionEntries!
}

input PageContactFilter {
  AND: [PageContactFilter]
  OR: [PageContactFilter]
  contactInformation: cfComponentContactNestedFilter
  contactInformation_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  description_contains: String
  description_exists: Boolean
  description_not_contains: String
  seo: cfComponentSeoNestedFilter
  seo_exists: Boolean
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type PageContactLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum PageContactOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
Home Page [See type definition](https://app.contentful.com/spaces/7hpjtmfrm15k/content_types/pageHome)
"""
type PageHome implements Entry {
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): PageHomeLinkingCollections
  projectsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageHomeProjectsCollection
  seo(locale: String, preview: Boolean): ComponentSeo
  slider(locale: String, preview: Boolean): ComponentSlider
  sys: Sys!
  title(locale: String): String
}

type PageHomeCollection {
  items: [PageHome]!
  limit: Int!
  skip: Int!
  total: Int!
}

input PageHomeFilter {
  AND: [PageHomeFilter]
  OR: [PageHomeFilter]
  contentfulMetadata: ContentfulMetadataFilter
  projects: cfPageProjectNestedFilter
  projectsCollection_exists: Boolean
  seo: cfComponentSeoNestedFilter
  seo_exists: Boolean
  slider: cfComponentSliderNestedFilter
  slider_exists: Boolean
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type PageHomeLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum PageHomeOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type PageHomeProjectsCollection {
  items: [PageProject]!
  limit: Int!
  skip: Int!
  total: Int!
}

"""
To have an entry point for the app [See type definition](https://app.contentful.com/spaces/7hpjtmfrm15k/content_types/pageLanding)
"""
type PageLanding implements Entry {
  contentfulMetadata: ContentfulMetadata!
  heroBannerHeadline(locale: String): String
  heroBannerHeadlineColor(locale: String): String
  heroBannerImage(locale: String, preview: Boolean): Asset
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): PageLandingLinkingCollections
  productsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageLandingProductsCollection
  seoFields(locale: String, preview: Boolean): ComponentSeo
  sys: Sys!
}

type PageLandingCollection {
  items: [PageLanding]!
  limit: Int!
  skip: Int!
  total: Int!
}

input PageLandingFilter {
  AND: [PageLandingFilter]
  OR: [PageLandingFilter]
  contentfulMetadata: ContentfulMetadataFilter
  heroBannerHeadline: String
  heroBannerHeadlineColor: String
  heroBannerHeadlineColor_contains: String
  heroBannerHeadlineColor_exists: Boolean
  heroBannerHeadlineColor_in: [String]
  heroBannerHeadlineColor_not: String
  heroBannerHeadlineColor_not_contains: String
  heroBannerHeadlineColor_not_in: [String]
  heroBannerHeadline_contains: String
  heroBannerHeadline_exists: Boolean
  heroBannerHeadline_in: [String]
  heroBannerHeadline_not: String
  heroBannerHeadline_not_contains: String
  heroBannerHeadline_not_in: [String]
  heroBannerImage_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  products: cfPageProductNestedFilter
  productsCollection_exists: Boolean
  seoFields: cfComponentSeoNestedFilter
  seoFields_exists: Boolean
  sys: SysFilter
}

type PageLandingLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum PageLandingOrder {
  heroBannerHeadlineColor_ASC
  heroBannerHeadlineColor_DESC
  heroBannerHeadline_ASC
  heroBannerHeadline_DESC
  internalName_ASC
  internalName_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type PageLandingProductsCollection {
  items: [PageProduct]!
  limit: Int!
  skip: Int!
  total: Int!
}

"""
To output data for a single product [See type definition](https://app.contentful.com/spaces/7hpjtmfrm15k/content_types/pageProduct)
"""
type PageProduct implements Entry {
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  featuredProductImage(locale: String, preview: Boolean): Asset
  internalName(locale: String): String
  linkedFrom(allowedLocales: [String]): PageProductLinkingCollections
  name(locale: String): String
  price(locale: String): Float
  productImagesCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): AssetCollection
  relatedProductsCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageProductRelatedProductsCollection
  seoFields(locale: String, preview: Boolean): ComponentSeo
  slug(locale: String): String
  sys: Sys!
}

type PageProductCollection {
  items: [PageProduct]!
  limit: Int!
  skip: Int!
  total: Int!
}

input PageProductFilter {
  AND: [PageProductFilter]
  OR: [PageProductFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  featuredProductImage_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  price: Float
  price_exists: Boolean
  price_gt: Float
  price_gte: Float
  price_in: [Float]
  price_lt: Float
  price_lte: Float
  price_not: Float
  price_not_in: [Float]
  productImagesCollection_exists: Boolean
  relatedProducts: cfPageProductNestedFilter
  relatedProductsCollection_exists: Boolean
  seoFields: cfComponentSeoNestedFilter
  seoFields_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
}

type PageProductLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageLandingCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageLandingCollection
  pageProductCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageProductCollection
}

enum PageProductOrder {
  internalName_ASC
  internalName_DESC
  name_ASC
  name_DESC
  price_ASC
  price_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type PageProductRelatedProductsCollection {
  items: [PageProduct]!
  limit: Int!
  skip: Int!
  total: Int!
}

"""
Single page for projects [See type definition](https://app.contentful.com/spaces/7hpjtmfrm15k/content_types/pageProject)
"""
type PageProject implements Entry {
  contentfulMetadata: ContentfulMetadata!
  date(locale: String): DateTime
  description(locale: String): PageProjectDescription
  linkedFrom(allowedLocales: [String]): PageProjectLinkingCollections
  slider(locale: String, preview: Boolean): ComponentSlider
  slug(locale: String): String
  subtitle(locale: String): String
  sys: Sys!
  tags(locale: String): [String]
  thumbnail(locale: String, preview: Boolean): Asset
  title(locale: String): String
}

type PageProjectCollection {
  items: [PageProject]!
  limit: Int!
  skip: Int!
  total: Int!
}

type PageProjectDescription {
  json: JSON!
  links: PageProjectDescriptionLinks!
}

type PageProjectDescriptionAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type PageProjectDescriptionEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type PageProjectDescriptionLinks {
  assets: PageProjectDescriptionAssets!
  entries: PageProjectDescriptionEntries!
}

input PageProjectFilter {
  AND: [PageProjectFilter]
  OR: [PageProjectFilter]
  contentfulMetadata: ContentfulMetadataFilter
  date: DateTime
  date_exists: Boolean
  date_gt: DateTime
  date_gte: DateTime
  date_in: [DateTime]
  date_lt: DateTime
  date_lte: DateTime
  date_not: DateTime
  date_not_in: [DateTime]
  description_contains: String
  description_exists: Boolean
  description_not_contains: String
  slider: cfComponentSliderNestedFilter
  slider_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  subtitle: String
  subtitle_contains: String
  subtitle_exists: Boolean
  subtitle_in: [String]
  subtitle_not: String
  subtitle_not_contains: String
  subtitle_not_in: [String]
  sys: SysFilter
  tags_contains_all: [String]
  tags_contains_none: [String]
  tags_contains_some: [String]
  tags_exists: Boolean
  thumbnail_exists: Boolean
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type PageProjectLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageHomeCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): PageHomeCollection
}

enum PageProjectOrder {
  date_ASC
  date_DESC
  slug_ASC
  slug_DESC
  subtitle_ASC
  subtitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
The 'Quality' type represents quality as whole numeric values between `1` and `100`.
"""
scalar Quality

type Query {
  asset(id: String!, locale: String, preview: Boolean): Asset
  assetCollection(limit: Int = 100, locale: String, order: [AssetOrder], preview: Boolean, skip: Int = 0, where: AssetFilter): AssetCollection
  assets(id: String!, locale: String, preview: Boolean): Assets
  assetsCollection(limit: Int = 100, locale: String, order: [AssetsOrder], preview: Boolean, skip: Int = 0, where: AssetsFilter): AssetsCollection
  componentContact(id: String!, locale: String, preview: Boolean): ComponentContact
  componentContactCollection(limit: Int = 100, locale: String, order: [ComponentContactOrder], preview: Boolean, skip: Int = 0, where: ComponentContactFilter): ComponentContactCollection
  componentSeo(id: String!, locale: String, preview: Boolean): ComponentSeo
  componentSeoCollection(limit: Int = 100, locale: String, order: [ComponentSeoOrder], preview: Boolean, skip: Int = 0, where: ComponentSeoFilter): ComponentSeoCollection
  componentSlider(id: String!, locale: String, preview: Boolean): ComponentSlider
  componentSliderCollection(limit: Int = 100, locale: String, order: [ComponentSliderOrder], preview: Boolean, skip: Int = 0, where: ComponentSliderFilter): ComponentSliderCollection
  componentSocialMedia(id: String!, locale: String, preview: Boolean): ComponentSocialMedia
  componentSocialMediaCollection(limit: Int = 100, locale: String, order: [ComponentSocialMediaOrder], preview: Boolean, skip: Int = 0, where: ComponentSocialMediaFilter): ComponentSocialMediaCollection
  entryCollection(limit: Int = 100, locale: String, order: [EntryOrder], preview: Boolean, skip: Int = 0, where: EntryFilter): EntryCollection
  menu(id: String!, locale: String, preview: Boolean): Menu
  menuCollection(limit: Int = 100, locale: String, order: [MenuOrder], preview: Boolean, skip: Int = 0, where: MenuFilter): MenuCollection
  pageAbout(id: String!, locale: String, preview: Boolean): PageAbout
  pageAboutCollection(limit: Int = 100, locale: String, order: [PageAboutOrder], preview: Boolean, skip: Int = 0, where: PageAboutFilter): PageAboutCollection
  pageContact(id: String!, locale: String, preview: Boolean): PageContact
  pageContactCollection(limit: Int = 100, locale: String, order: [PageContactOrder], preview: Boolean, skip: Int = 0, where: PageContactFilter): PageContactCollection
  pageHome(id: String!, locale: String, preview: Boolean): PageHome
  pageHomeCollection(limit: Int = 100, locale: String, order: [PageHomeOrder], preview: Boolean, skip: Int = 0, where: PageHomeFilter): PageHomeCollection
  pageLanding(id: String!, locale: String, preview: Boolean): PageLanding
  pageLandingCollection(limit: Int = 100, locale: String, order: [PageLandingOrder], preview: Boolean, skip: Int = 0, where: PageLandingFilter): PageLandingCollection
  pageProduct(id: String!, locale: String, preview: Boolean): PageProduct
  pageProductCollection(limit: Int = 100, locale: String, order: [PageProductOrder], preview: Boolean, skip: Int = 0, where: PageProductFilter): PageProductCollection
  pageProject(id: String!, locale: String, preview: Boolean): PageProject
  pageProjectCollection(limit: Int = 100, locale: String, order: [PageProjectOrder], preview: Boolean, skip: Int = 0, where: PageProjectFilter): PageProjectCollection
  translations(id: String!, locale: String, preview: Boolean): Translations
  translationsCollection(limit: Int = 100, locale: String, order: [TranslationsOrder], preview: Boolean, skip: Int = 0, where: TranslationsFilter): TranslationsCollection
}

type Sys {
  environmentId: String!
  firstPublishedAt: DateTime
  id: String!
  publishedAt: DateTime
  publishedVersion: Int
  spaceId: String!
}

input SysFilter {
  firstPublishedAt: DateTime
  firstPublishedAt_exists: Boolean
  firstPublishedAt_gt: DateTime
  firstPublishedAt_gte: DateTime
  firstPublishedAt_in: [DateTime]
  firstPublishedAt_lt: DateTime
  firstPublishedAt_lte: DateTime
  firstPublishedAt_not: DateTime
  firstPublishedAt_not_in: [DateTime]
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  publishedAt: DateTime
  publishedAt_exists: Boolean
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  publishedAt_in: [DateTime]
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  publishedAt_not: DateTime
  publishedAt_not_in: [DateTime]
  publishedVersion: Float
  publishedVersion_exists: Boolean
  publishedVersion_gt: Float
  publishedVersion_gte: Float
  publishedVersion_in: [Float]
  publishedVersion_lt: Float
  publishedVersion_lte: Float
  publishedVersion_not: Float
  publishedVersion_not_in: [Float]
}

"""
I18n string translations [See type definition](https://app.contentful.com/spaces/7hpjtmfrm15k/content_types/translations)
"""
type Translations implements Entry {
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): TranslationsLinkingCollections
  string(locale: String): String
  sys: Sys!
  translation(locale: String): String
}

type TranslationsCollection {
  items: [Translations]!
  limit: Int!
  skip: Int!
  total: Int!
}

input TranslationsFilter {
  AND: [TranslationsFilter]
  OR: [TranslationsFilter]
  contentfulMetadata: ContentfulMetadataFilter
  string: String
  string_contains: String
  string_exists: Boolean
  string_in: [String]
  string_not: String
  string_not_contains: String
  string_not_in: [String]
  sys: SysFilter
  translation: String
  translation_contains: String
  translation_exists: Boolean
  translation_in: [String]
  translation_not: String
  translation_not_contains: String
  translation_not_in: [String]
}

type TranslationsLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum TranslationsOrder {
  string_ASC
  string_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  translation_ASC
  translation_DESC
}

input cfComponentContactNestedFilter {
  AND: [cfComponentContactNestedFilter]
  OR: [cfComponentContactNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  email: String
  email_contains: String
  email_exists: Boolean
  email_in: [String]
  email_not: String
  email_not_contains: String
  email_not_in: [String]
  location: String
  location_contains: String
  location_exists: Boolean
  location_in: [String]
  location_not: String
  location_not_contains: String
  location_not_in: [String]
  phone: String
  phone_contains: String
  phone_exists: Boolean
  phone_in: [String]
  phone_not: String
  phone_not_contains: String
  phone_not_in: [String]
  sys: SysFilter
}

input cfComponentSeoNestedFilter {
  AND: [cfComponentSeoNestedFilter]
  OR: [cfComponentSeoNestedFilter]
  canonicalUrl: String
  canonicalUrl_contains: String
  canonicalUrl_exists: Boolean
  canonicalUrl_in: [String]
  canonicalUrl_not: String
  canonicalUrl_not_contains: String
  canonicalUrl_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  nofollow: Boolean
  nofollow_exists: Boolean
  nofollow_not: Boolean
  noindex: Boolean
  noindex_exists: Boolean
  noindex_not: Boolean
  pageDescription: String
  pageDescription_contains: String
  pageDescription_exists: Boolean
  pageDescription_in: [String]
  pageDescription_not: String
  pageDescription_not_contains: String
  pageDescription_not_in: [String]
  pageTitle: String
  pageTitle_contains: String
  pageTitle_exists: Boolean
  pageTitle_in: [String]
  pageTitle_not: String
  pageTitle_not_contains: String
  pageTitle_not_in: [String]
  shareImagesCollection_exists: Boolean
  sys: SysFilter
}

input cfComponentSliderNestedFilter {
  AND: [cfComponentSliderNestedFilter]
  OR: [cfComponentSliderNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  imageCollection_exists: Boolean
  sys: SysFilter
}

input cfPageProductNestedFilter {
  AND: [cfPageProductNestedFilter]
  OR: [cfPageProductNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  featuredProductImage_exists: Boolean
  internalName: String
  internalName_contains: String
  internalName_exists: Boolean
  internalName_in: [String]
  internalName_not: String
  internalName_not_contains: String
  internalName_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  price: Float
  price_exists: Boolean
  price_gt: Float
  price_gte: Float
  price_in: [Float]
  price_lt: Float
  price_lte: Float
  price_not: Float
  price_not_in: [Float]
  productImagesCollection_exists: Boolean
  relatedProductsCollection_exists: Boolean
  seoFields_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
}

input cfPageProjectNestedFilter {
  AND: [cfPageProjectNestedFilter]
  OR: [cfPageProjectNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  date: DateTime
  date_exists: Boolean
  date_gt: DateTime
  date_gte: DateTime
  date_in: [DateTime]
  date_lt: DateTime
  date_lte: DateTime
  date_not: DateTime
  date_not_in: [DateTime]
  description_contains: String
  description_exists: Boolean
  description_not_contains: String
  slider_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  subtitle: String
  subtitle_contains: String
  subtitle_exists: Boolean
  subtitle_in: [String]
  subtitle_not: String
  subtitle_not_contains: String
  subtitle_not_in: [String]
  sys: SysFilter
  tags_contains_all: [String]
  tags_contains_none: [String]
  tags_contains_some: [String]
  tags_exists: Boolean
  thumbnail_exists: Boolean
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}